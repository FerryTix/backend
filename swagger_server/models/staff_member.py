# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.staff_role import StaffRole  # noqa: F401,E501
from swagger_server import util


class StaffMember(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uuid: str=None, first_name: str=None, last_name: str=None, role: StaffRole=None):  # noqa: E501
        """StaffMember - a model defined in Swagger

        :param uuid: The uuid of this StaffMember.  # noqa: E501
        :type uuid: str
        :param first_name: The first_name of this StaffMember.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this StaffMember.  # noqa: E501
        :type last_name: str
        :param role: The role of this StaffMember.  # noqa: E501
        :type role: StaffRole
        """
        self.swagger_types = {
            'uuid': str,
            'first_name': str,
            'last_name': str,
            'role': StaffRole
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'role': 'role'
        }
        self._uuid = uuid
        self._first_name = first_name
        self._last_name = last_name
        self._role = role

    @classmethod
    def from_dict(cls, dikt) -> 'StaffMember':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StaffMember of this StaffMember.  # noqa: E501
        :rtype: StaffMember
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this StaffMember.


        :return: The uuid of this StaffMember.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this StaffMember.


        :param uuid: The uuid of this StaffMember.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def first_name(self) -> str:
        """Gets the first_name of this StaffMember.


        :return: The first_name of this StaffMember.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this StaffMember.


        :param first_name: The first_name of this StaffMember.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this StaffMember.


        :return: The last_name of this StaffMember.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this StaffMember.


        :param last_name: The last_name of this StaffMember.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def role(self) -> StaffRole:
        """Gets the role of this StaffMember.


        :return: The role of this StaffMember.
        :rtype: StaffRole
        """
        return self._role

    @role.setter
    def role(self, role: StaffRole):
        """Sets the role of this StaffMember.


        :param role: The role of this StaffMember.
        :type role: StaffRole
        """

        self._role = role
