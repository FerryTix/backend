# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TicketClass(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, bicycle: bool=None, _return: bool=None, reduced: bool=None, staff: bool=None):  # noqa: E501
        """TicketClass - a model defined in Swagger

        :param bicycle: The bicycle of this TicketClass.  # noqa: E501
        :type bicycle: bool
        :param _return: The _return of this TicketClass.  # noqa: E501
        :type _return: bool
        :param reduced: The reduced of this TicketClass.  # noqa: E501
        :type reduced: bool
        :param staff: The staff of this TicketClass.  # noqa: E501
        :type staff: bool
        """
        self.swagger_types = {
            'bicycle': bool,
            '_return': bool,
            'reduced': bool,
            'staff': bool
        }

        self.attribute_map = {
            'bicycle': 'bicycle',
            '_return': 'return',
            'reduced': 'reduced',
            'staff': 'staff'
        }
        self._bicycle = bicycle
        self.__return = _return
        self._reduced = reduced
        self._staff = staff

    @classmethod
    def from_dict(cls, dikt) -> 'TicketClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TicketClass of this TicketClass.  # noqa: E501
        :rtype: TicketClass
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bicycle(self) -> bool:
        """Gets the bicycle of this TicketClass.

        whether or not a bicycle was carried  # noqa: E501

        :return: The bicycle of this TicketClass.
        :rtype: bool
        """
        return self._bicycle

    @bicycle.setter
    def bicycle(self, bicycle: bool):
        """Sets the bicycle of this TicketClass.

        whether or not a bicycle was carried  # noqa: E501

        :param bicycle: The bicycle of this TicketClass.
        :type bicycle: bool
        """

        self._bicycle = bicycle

    @property
    def _return(self) -> bool:
        """Gets the _return of this TicketClass.

        whether or not a return trip has been purchased  # noqa: E501

        :return: The _return of this TicketClass.
        :rtype: bool
        """
        return self.__return

    @_return.setter
    def _return(self, _return: bool):
        """Sets the _return of this TicketClass.

        whether or not a return trip has been purchased  # noqa: E501

        :param _return: The _return of this TicketClass.
        :type _return: bool
        """

        self.__return = _return

    @property
    def reduced(self) -> bool:
        """Gets the reduced of this TicketClass.

        reduced fare for physically disabled persons and children under the age of 14  # noqa: E501

        :return: The reduced of this TicketClass.
        :rtype: bool
        """
        return self._reduced

    @reduced.setter
    def reduced(self, reduced: bool):
        """Sets the reduced of this TicketClass.

        reduced fare for physically disabled persons and children under the age of 14  # noqa: E501

        :param reduced: The reduced of this TicketClass.
        :type reduced: bool
        """

        self._reduced = reduced

    @property
    def staff(self) -> bool:
        """Gets the staff of this TicketClass.

        only for staff members  # noqa: E501

        :return: The staff of this TicketClass.
        :rtype: bool
        """
        return self._staff

    @staff.setter
    def staff(self, staff: bool):
        """Sets the staff of this TicketClass.

        only for staff members  # noqa: E501

        :param staff: The staff of this TicketClass.
        :type staff: bool
        """

        self._staff = staff
