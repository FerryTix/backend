# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CashPayment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, denominations: List[int]=None, change: List[int]=None):  # noqa: E501
        """CashPayment - a model defined in Swagger

        :param denominations: The denominations of this CashPayment.  # noqa: E501
        :type denominations: List[int]
        :param change: The change of this CashPayment.  # noqa: E501
        :type change: List[int]
        """
        self.swagger_types = {
            'denominations': List[int],
            'change': List[int]
        }

        self.attribute_map = {
            'denominations': 'denominations',
            'change': 'change'
        }
        self._denominations = denominations
        self._change = change

    @classmethod
    def from_dict(cls, dikt) -> 'CashPayment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CashPayment of this CashPayment.  # noqa: E501
        :rtype: CashPayment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def denominations(self) -> List[int]:
        """Gets the denominations of this CashPayment.

        List of coins and bills the payment consists of.  # noqa: E501

        :return: The denominations of this CashPayment.
        :rtype: List[int]
        """
        return self._denominations

    @denominations.setter
    def denominations(self, denominations: List[int]):
        """Sets the denominations of this CashPayment.

        List of coins and bills the payment consists of.  # noqa: E501

        :param denominations: The denominations of this CashPayment.
        :type denominations: List[int]
        """

        self._denominations = denominations

    @property
    def change(self) -> List[int]:
        """Gets the change of this CashPayment.

        List of coins and bills the change consists of.  # noqa: E501

        :return: The change of this CashPayment.
        :rtype: List[int]
        """
        return self._change

    @change.setter
    def change(self, change: List[int]):
        """Sets the change of this CashPayment.

        List of coins and bills the change consists of.  # noqa: E501

        :param change: The change of this CashPayment.
        :type change: List[int]
        """

        self._change = change
