# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.machine_location import MachineLocation  # noqa: F401,E501
from swagger_server import util


class VendingMachine(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uuid: str=None, public_key: str=None, location: MachineLocation=None):  # noqa: E501
        """VendingMachine - a model defined in Swagger

        :param uuid: The uuid of this VendingMachine.  # noqa: E501
        :type uuid: str
        :param public_key: The public_key of this VendingMachine.  # noqa: E501
        :type public_key: str
        :param location: The location of this VendingMachine.  # noqa: E501
        :type location: MachineLocation
        """
        self.swagger_types = {
            'uuid': str,
            'public_key': str,
            'location': MachineLocation
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'public_key': 'publicKey',
            'location': 'location'
        }
        self._uuid = uuid
        self._public_key = public_key
        self._location = location

    @classmethod
    def from_dict(cls, dikt) -> 'VendingMachine':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VendingMachine of this VendingMachine.  # noqa: E501
        :rtype: VendingMachine
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this VendingMachine.


        :return: The uuid of this VendingMachine.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this VendingMachine.


        :param uuid: The uuid of this VendingMachine.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def public_key(self) -> str:
        """Gets the public_key of this VendingMachine.


        :return: The public_key of this VendingMachine.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key: str):
        """Sets the public_key of this VendingMachine.


        :param public_key: The public_key of this VendingMachine.
        :type public_key: str
        """

        self._public_key = public_key

    @property
    def location(self) -> MachineLocation:
        """Gets the location of this VendingMachine.


        :return: The location of this VendingMachine.
        :rtype: MachineLocation
        """
        return self._location

    @location.setter
    def location(self, location: MachineLocation):
        """Sets the location of this VendingMachine.


        :param location: The location of this VendingMachine.
        :type location: MachineLocation
        """

        self._location = location
