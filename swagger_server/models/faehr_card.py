# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FaehrCard(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uuid: str=None, owned_by: str=None, balance: int=None, issued_at: datetime=None, issued_by: str=None):  # noqa: E501
        """FaehrCard - a model defined in Swagger

        :param uuid: The uuid of this FaehrCard.  # noqa: E501
        :type uuid: str
        :param owned_by: The owned_by of this FaehrCard.  # noqa: E501
        :type owned_by: str
        :param balance: The balance of this FaehrCard.  # noqa: E501
        :type balance: int
        :param issued_at: The issued_at of this FaehrCard.  # noqa: E501
        :type issued_at: datetime
        :param issued_by: The issued_by of this FaehrCard.  # noqa: E501
        :type issued_by: str
        """
        self.swagger_types = {
            'uuid': str,
            'owned_by': str,
            'balance': int,
            'issued_at': datetime,
            'issued_by': str
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'owned_by': 'ownedBy',
            'balance': 'balance',
            'issued_at': 'issuedAt',
            'issued_by': 'issuedBy'
        }
        self._uuid = uuid
        self._owned_by = owned_by
        self._balance = balance
        self._issued_at = issued_at
        self._issued_by = issued_by

    @classmethod
    def from_dict(cls, dikt) -> 'FaehrCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FaehrCard of this FaehrCard.  # noqa: E501
        :rtype: FaehrCard
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this FaehrCard.


        :return: The uuid of this FaehrCard.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this FaehrCard.


        :param uuid: The uuid of this FaehrCard.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def owned_by(self) -> str:
        """Gets the owned_by of this FaehrCard.


        :return: The owned_by of this FaehrCard.
        :rtype: str
        """
        return self._owned_by

    @owned_by.setter
    def owned_by(self, owned_by: str):
        """Sets the owned_by of this FaehrCard.


        :param owned_by: The owned_by of this FaehrCard.
        :type owned_by: str
        """

        self._owned_by = owned_by

    @property
    def balance(self) -> int:
        """Gets the balance of this FaehrCard.


        :return: The balance of this FaehrCard.
        :rtype: int
        """
        return self._balance

    @balance.setter
    def balance(self, balance: int):
        """Sets the balance of this FaehrCard.


        :param balance: The balance of this FaehrCard.
        :type balance: int
        """

        self._balance = balance

    @property
    def issued_at(self) -> datetime:
        """Gets the issued_at of this FaehrCard.


        :return: The issued_at of this FaehrCard.
        :rtype: datetime
        """
        return self._issued_at

    @issued_at.setter
    def issued_at(self, issued_at: datetime):
        """Sets the issued_at of this FaehrCard.


        :param issued_at: The issued_at of this FaehrCard.
        :type issued_at: datetime
        """

        self._issued_at = issued_at

    @property
    def issued_by(self) -> str:
        """Gets the issued_by of this FaehrCard.


        :return: The issued_by of this FaehrCard.
        :rtype: str
        """
        return self._issued_by

    @issued_by.setter
    def issued_by(self, issued_by: str):
        """Sets the issued_by of this FaehrCard.


        :param issued_by: The issued_by of this FaehrCard.
        :type issued_by: str
        """

        self._issued_by = issued_by
